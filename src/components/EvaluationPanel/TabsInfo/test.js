// function createLableArray (num) {
//   let array = ['All Class']
//   for (let i = 1; i < num + 1; i++) {
//     array.push( `class ${i}` )
//   }
//   return array
// }

// let result = createLableArray(10)
// result




// fake API
let fake_lables = [0, 1, 2,3]
let fake_metrics = {
  "log_loss": 0.26739379699424076,
  "fpr_roccurve": {
    "0": [
      0,
      0,
      0,
      1
    ],
    "1": [
      0,
      0,
      0,
      0.027932960893854747,
      0.027932960893854747,
      0.055865921787709494,
      0.055865921787709494,
      0.08007448789571694,
      0.08007448789571694,
      1
    ],
    "2": [
      0,
      0,
      0,
      0.001834862385321101,
      0.001834862385321101,
      0.003669724770642202,
      0.003669724770642202,
      0.005504587155963303,
      0.005504587155963303,
      0.011009174311926606,
      0.011009174311926606,
      0.022018348623853212,
      0.022018348623853212,
      0.027522935779816515,
      0.027522935779816515,
      0.09908256880733946,
      0.09908256880733946,
      0.1853211009174312,
      0.1853211009174312,
      0.28623853211009176,
      0.28623853211009176,
      0.8055045871559633,
      0.8055045871559633,
      1
    ],
    "3": [
      0.01,
      0,
      0,
      0.001834862385321101,
      0.001834862385321101,
      0.00366
    ]

    
  },
  "tpr_roccurve": {
    "0": [
      0,
      0.016666666666666666,
      1,
      1
    ],
    "1": [
      0,
      0.014705882352941176,
      0.9558823529411765,
      0.9558823529411765,
      0.9705882352941176,
      0.9705882352941176,
      0.9852941176470589,
      0.9852941176470589,
      1,
      1
    ],
    "2": [
      0,
      0.016666666666666666,
      0.6666666666666666,
      0.6666666666666666,
      0.8333333333333334,
      0.8333333333333334,
      0.85,
      0.85,
      0.8833333333333333,
      0.8833333333333333,
      0.9,
      0.9,
      0.9166666666666666,
      0.9166666666666666,
      0.9333333333333333,
      0.9333333333333333,
      0.95,
      0.95,
      0.9666666666666667,
      0.9666666666666667,
      0.9833333333333333,
      0.9833333333333333,
      1,
      1
    ],
    "3": [
      0.01,
      0,
      0,
      0.001834862385321101,
      0.001834862385321101,
      0.00366
    ]

    
  },
  "thresholds_roccurve": {
    "0": [
      1.9999744892120361,
      0.9999744892120361,
      0.638652503490448,
      7.73588340052811e-8
    ],
    "1": [
      1.9866998195648193,
      0.9866998195648193,
      0.7531593441963196,
      0.02362661436200142,
      0.023053672164678574,
      0.01711299456655979,
      0.016567343845963478,
      0.01345193013548851,
      0.012721286155283451,
      2.320867720229103e-9
    ],
    "2": [
      1.9999982118606567,
      0.9999982118606567,
      0.9432120323181152,
      0.9393662214279175,
      0.7820477485656738,
      0.7223142385482788,
      0.6695012450218201,
      0.6608535051345825,
      0.6165273785591125,
      0.47913262248039246,
      0.42613485455513,
      0.2541779577732086,
      0.20896370708942413,
      0.15817654132843018,
      0.15237514674663544,
      0.03763582557439804,
      0.036972466856241226,
      0.0166302677243948,
      0.016448454931378365,
      0.008701630868017673,
      0.008607880212366581,
      0.0002898985694628209,
      0.0002873244811780751,
      6.54995574222994e-7
    ],
    "3": [
      0.01,
      0,
      0,
      0.001834862385321101,
      0.001834862385321101,
      0.00366
    ]

    
  },
  "roc_auc": {
    "0": 1,
    "1": 0.9975900974915106,
    "2": 0.9755045871559633,
    "3": 0.67,
  },
  "precision_prcurve": {
    "0": [
      1,
      1,
      1,

    ],
    "1": [

      0.8552631578947368,
      0.8666666666666667,
      0.8783783783783784,
      0.8904109589041096,
      0.9027777777777778,
      0.9154929577464789,
      0.9285714285714286,
      0.9420289855072463,
      0.9558823529411765,
      0.9701492537313433,
      0.9848484848484849,

    ],
    "2": [
      39,
      0.9791666666666666,
      0.9787234042553191,
      0.9782608695652174,
      0.9777777777777777,
      0.9772727272727273,
      0.9767441860465116,
      0.9761904761904762,
      0.975609756097561,

    ],
    "3": [
      0.01,
      0,
      0,
      0.001834862385321101,
      0.001834862385321101,
      0.00366
    ]

  },
  "recall_prcurve": {
    "0": [
      1,
      0.9833333333333333,
      0.9666666666666667,
      0.95,
      0.9333333333333333,
      0.9166666666666666,

    ],
    "1": [
      1,
      0.9852941176470589,
      0.9852941176470589,
      0.9852941176470589,
      0.9852941176470589,
      0.9852941176470589,
      0.9852941176470589,
      0.9852941176470589,
      0.9852941176470589,

    ],
    "2": [
      1,
      0.9833333333333333,
      0.9833333333333333,
      0.9833333333333333,
      0.15,
      0.13333333333333333,
      0.11666666666666667,
      0.1,
      0.08333333333333333,
      0.06666666666666667,
      0.05,
      0.03333333333333333,
      0.016666666666666666,
      0
    ],
    "3": [
      0.01,
      0,
      0,
      0.001834862385321101,
      0.001834862385321101,
      0.00366
    ]

  },
  "thresholds_prcurve": {
    "0": [
      0.638652503490448,
      0.7687115669250488,
      0.7861970663070679,
      0.8254095911979675,
      0.8278610110282898,
      0.832051694393158,
      0.8495823740959167,
    ],
    "1": [
      0.9992795586585999,
      0.9993293285369873,
      0.9993705153465271,
      0.9995949864387512,
      0.9997562766075134,
      0.9997883439064026,
      0.9998279809951782,
      0.9998866319656372,
      0.9999231100082397,
      0.9999427795410156,
      0.9999512434005737,
      0.9999533891677856,
      0.9999606609344482,
      0.9999620914459229,
      0.9999687671661377,
      0.999970555305481,
      0.9999799728393555,
      0.9999982118606567
    ],
    "2": [
      0.9823064208030701,
      0.9844377636909485,
      0.9881548881530762,
      0.990806519985199,
      0.9924047589302063,
      0.9925738573074341,
      0.9928722381591797,
      0.9933645725250244,
      0.9934960603713989,
      0.9944122433662415,
      0.9949848651885986,
      0.9952824711799622,
      0.9966608285903931,
      0.9986982345581055
    ],
    "3": [
      0.01,
      0,
      0,
      0.001834862385321101,
      0.001834862385321101,
      0.00366
    ]

  },
  "confusion_matrix": [
    [
      60,
      0,
      0,
      0,
      0
    ],
    [
      0,
      65,
      2,
      1,
      0
    ],
    [
      0,
      0,
      54,
      1,
      0
    ],
    [
      0,
      0,
      4,
      52,
      0
    ],
    [
      0,
      0,
      0,
      0,
      59
    ]
  ],
  "accuracy": 0.9338842975206612,
  "macro_precision": 0.936782263990439,
  "macro_recall": 0.9344911202713602,
  "macro_f1_score": 0.9336434875304678,
  "macro_f2_score": 0.9336502626259298,
  "micro_precision": 0.9338842975206612,
  "micro_recall": 0.9338842975206612,
  "micro_f1_score": 0.9338842975206612,
  "micro_f2_score": 0.9338842975206612,
  "cohen_kappa_score": 0.9265373278408349
}


// create the dataset
function createData(lables = "", metric = {}) {
  // 1. init the data for all lables
  let tabData = []

  // 1.2 setup for later init
  // 1.2.1 setup the all_class axis obj
  let axisObj = {}
  for (let i = 0; i < lables.length + 1; i++) {
    axisObj[`tpr_roccurve of class ${i}`] = `fpr_roccurve of class ${i}`
  }


  // 1.1.2 create all_class dataColumne
  let dataArray = [] // will later store to dataColumn

  // can't use spread, setup temp
  let fprTemp = {}
  let tprTemp = {}
  for (let i = 0; i < lables.length + 1; i++) {
    fprTemp[`${i}`] = metric['fpr_roccurve'][`${i}`]
    tprTemp[`${i}`] = metric['tpr_roccurve'][`${i}`]
  }


  // push fpr first
  for (let i = 0; i < lables.length; i++) {
    dataArray.push([`fpr_roccurve of class ${ i }`])
    for (let j = 0; j < fprTemp[i].length; j++) {
      dataArray[i].push(fprTemp[i][j])
    }
  }

  // push tpr
  for (let i = 0; i < lables.length; i++) {
    dataArray.push([`tpr_roccurve of class ${ i }`])
    for (let j = 0; j < tprTemp[i].length; j++) {
      // i + lables.length -> begin after fpr element
      dataArray[i + lables.length].push(tprTemp[i][j])
    }
  }

  // 1.3 init all_class data
  tabData.push({
    "id": 0,
    "name": "all class",
    "metrics": {
      "Sensitivity": metric['micro_recall'],
      "Specificity": "N/A",
      "Precision": metric['micro_precision'],
      "F1score": metric['micro_f1_score'],
      "AUC": "N/A"
    },
    "grpah": {
      ChartTitle: 'ROC Chart',
      xAxisLabel: '1 - Specificity (False Positive Rate)',
      yAxisLabel: 'Sensitivity (True Positive Rate)',
      axisSetting: axisObj,
      dataColumn: dataArray,
      "precision": [0.45, 0.5, 0.6, 0.7, 0.8, 1],
      "recall": [1, 0.75, 0.5, 0.25, 0.1, 0],
      "image": 1000
    }
  })

  // 1.3 create dataColumn for each class

  // init data strcutrure
  let eachDataColumn = []
  for (let i = 0; i < lables.length; i++) {
    eachDataColumn.push([])
  }


  for (let i = 0; i < lables.length; i++) { // loop thru class
    eachDataColumn[i].push(['threshold', ...metric['thresholds_prcurve'][i]])
    eachDataColumn[i].push(['precision', ...metric['precision_prcurve'][i]])
    eachDataColumn[i].push(['recall', ...metric['recall_prcurve'][i]])
    }


  // 1.4 init each class/label
  for (let i = 0; i < lables.length; i++) {
    tabData.push({
      "id": `${i+1}`,
      "name": `class ${lables[i]}`,
      "metrics": {
        "Sensitivity": "N/A",
        "Specificity": "N/A",
        "Precision": "N/A",
        "F1score": "N/A",
        "AUC": metric['roc_auc'][`${i}`],
      },
      "grpah": {
        ChartTitle: 'Precision Recall Curve',
        xAxisLabel: 'Threshold',
        yAxisLabel: 'Precision / Recall',
        axisSetting: {
          'precision': 'threshold',
          'recall': 'threshold',
        },
        dataColumn: eachDataColumn[i],
        "precision": [0.45, 0.5, 0.6, 0.7, 0.8, 1],
        "recall": [1, 0.75, 0.5, 0.25, 0.1, 0],
        "image": "N/A"
      }
    })
  }



  return tabData

}

let newData = createData(fake_lables, fake_metrics)


// checking log
// newData
// let check = newData[1]['grpah']['dataColumn']
// let check = newData[0]['grpah']['axisSetting']
// check

// let check = newData[3]['metrics']['AUC']
// check


